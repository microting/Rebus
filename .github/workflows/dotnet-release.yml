name: .NET Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-ubuntu:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET 7.0
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 7.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore -c Release /p:EnableSourceLink=false
    - name: Test Contracts
      run: dotnet test Rebus.Tests.Contracts --no-build --verbosity normal -c Release /p:WarningLevel=3 /p:EnableSourceLink=false
    - name: Test
      run: dotnet test Rebus.Tests --verbosity normal -c Release /p:WarningLevel=3 /p:EnableSourceLink=false
  build-windows:
    needs: build-ubuntu
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET 7.0
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 7.0.x
    - name: Restore dependencies
      run:  |
        dotnet nuget locals all --clear
        dotnet restore
    - name: Build
      run: dotnet build --no-restore -c Release /p:EnableSourceLink=false
    - name: Test Contracts
      run: dotnet test Rebus.Tests.Contracts --no-build --verbosity normal -c Release /p:WarningLevel=3 /p:EnableSourceLink=false
    - name: Test
      run: dotnet test Rebus.Tests --no-build --verbosity normal -c Release /p:WarningLevel=3 /p:EnableSourceLink=false
  deploy:
    needs: build-windows
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
    - name: Install dependencies
      run: dotnet restore
    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3 | cut -d "v" -f 2)
    - name: Build
      run: dotnet build --configuration Release
    - name: Pack
      run: dotnet pack Rebus7.sln -c Release -o ./artifacts -p:PackageVersion=${{ steps.get_version.outputs.VERSION }}
    - name: Push generated Rebus package to GitHub registry
      run: dotnet nuget push /home/runner/work/Rebus/Rebus/artifacts/Microting.Rebus.${{ steps.get_version.outputs.VERSION }}.nupkg -k ${{secrets.NUGET_SECRET_KEY}} -s https://api.nuget.org/v3/index.json --skip-duplicate --no-symbols
    - name: Push generated Rebus.Tests.Contracts package to GitHub registry
      run: dotnet nuget push /home/runner/work/Rebus/Rebus/artifacts/Microting.Rebus.Tests.Contracts.${{ steps.get_version.outputs.VERSION }}.nupkg -k ${{secrets.NUGET_SECRET_KEY}} -s https://api.nuget.org/v3/index.json --skip-duplicate --no-symbols
